name: Deploy with Docker

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: msf-nabi/nabi_ai
  NAME: nabi

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Lowercase the image name
      run: |
        echo "IMAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest


  deploy:
    needs: build-and-push
    runs-on: [ self-hosted, label-nabi ]
    permissions:
      contents: read
      packages: read
    steps:
      - name: Lowercase the image name
        run: |
          echo "IMAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Decode and create .env file
        run: |
          echo "${{ secrets.APPLICATION_SECRET_YML }}" | base64 -d > .env

      - name: Deploy to server
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker stop ${{ env.NAME }} || true
          docker rm ${{ env.NAME }} || true
          docker run -d -p 8000:8000 --name ${{ env.NAME }} --restart always \
            --env-file ${{ github.workspace }}/.env \
            -e OPENAI_API_KEY=$OPENAI_API_KEY \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
